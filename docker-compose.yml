# docker-compose.yml
version: '3.9'
services:
  postgres:
    container_name: 'highload_postgres'
    image: postgres:17
    restart: always
    environment:
      POSTGRES_HOST:      "${POSTGRES_HOST}"
      POSTGRES_DB:        "${POSTGRES_DB}"
      POSTGRES_USER:      "${POSTGRES_USER}"
      POSTGRES_PASSWORD:  "${POSTGRES_PASSWORD}"
      POSTGRES_PORT:      "${POSTGRES_PORT}"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - internal

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    container_name: zookeeper
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - internal

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      # где искать ZooKeeper
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # слушаем внутри контейнера:
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      # то, что будет рекламироваться клиентам
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      # обязательный параметр для единственного брокера
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - internal

  rating_service:
    build: .
    image: rating_service:latest
    volumes:
      - ./logs/:/logs/
    restart: always
    depends_on:
      - postgres
    ports:
      - "50051:50051"
    networks:
      - internal

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    volumes:
        - ./elk_resources/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    healthcheck:
        test: ["CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health"]
        interval: 3s
        timeout: 3s
        retries: 10
    ports:
        - 9200:9200
    networks:
      - internal

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.2
    volumes:
        - ./elk_resources/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    depends_on:
        elasticsearch:
            condition: service_healthy
    healthcheck:
        test: ["CMD-SHELL", "curl -s localhost:9600/_node/pipelines?pretty || exit 1"]
        interval: 3s
        timeout: 3s
        retries: 50
    networks:
      - internal

  filebeat:
    image: docker.elastic.co/beats/filebeat:6.5.1
    depends_on:
        logstash:
            condition: service_healthy
    volumes:
        - ./elk_resources/filebeat.yml:/usr/share/filebeat/filebeat.yml
        - ./logs/:/logs/
    healthcheck:
        test: ["CMD", "filebeat", "test", "config", "-c", "/usr/share/filebeat/filebeat.yml"]
        interval: 3s
        timeout: 3s
        retries: 50
    networks:
      - internal

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    depends_on:
        elasticsearch:
            condition: service_healthy
    healthcheck:
        test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/api/status"]
        interval: 3s
        timeout: 3s
        retries: 50
    ports:
        - 5601:5601
    networks:
      - internal

volumes:
  postgres_data:

networks:
  internal:
    driver: bridge
